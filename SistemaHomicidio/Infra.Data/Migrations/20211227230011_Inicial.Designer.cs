// <auto-generated />
using System;
using Infra.Data.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20211227230011_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Arquivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CriacaoArquivo")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CRIACAOARQUIVO");

                    b.Property<byte[]>("DadosArquivo")
                        .HasColumnType("RAW(2000)")
                        .HasColumnName("DADOSARQUIVO");

                    b.Property<string>("NomeArquivo")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOMEARQUIVO");

                    b.Property<int>("RegistroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RGID");

                    b.Property<string>("TipoArquivo")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPOARQUIVO");

                    b.HasKey("Id");

                    b.HasIndex("RegistroId");

                    b.ToTable("ARQUIVOS", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.BoeComplementado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Boe")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BOE");

                    b.Property<DateTime?>("DataRegistro")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("DATAREGISTRO");

                    b.Property<int>("RegistroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RGID");

                    b.HasKey("Id");

                    b.HasIndex("RegistroId");

                    b.ToTable("BOECOMPL", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.Envolvido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Autoria")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AUTORIA");

                    b.Property<string>("ConsumoDrogas")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CONSUMODROGAS");

                    b.Property<string>("CorPele")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CORPELE");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DATANASCIMENTO");

                    b.Property<string>("DeficienciaFisica")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DEFICIENCIAFISICA");

                    b.Property<string>("DepedenciaQuimica")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DEPEDENCIAQUIMICA");

                    b.Property<string>("EstadoCivil")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ESTADOCIVIL");

                    b.Property<string>("Flagrante")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FLAGRANTE");

                    b.Property<string>("IdadeAparente")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IDADEAPARENTE");

                    b.Property<int?>("IdadeExata")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IDADEEXATA");

                    b.Property<string>("IdentidadeGenero")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IDENTIDADEGENERO");

                    b.Property<string>("InformacaoTrabalho")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INFORMACAOTRABALHO");

                    b.Property<string>("InstrumentoUtilizado")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INSTRUMENTOUTILIZADO");

                    b.Property<string>("IntraFamiliarVitimaAutor")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INTRAFAMILIARVITIMAAUTOR");

                    b.Property<string>("MotivacaoFinal")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MOTIVACAOFINAL");

                    b.Property<string>("MotivacaoInicial")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MOTIVACAOINICIAL");

                    b.Property<string>("NomeEnvolvido")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOMEENVOLVIDO");

                    b.Property<string>("NomeGenitora")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOMEGENITORA");

                    b.Property<string>("NomeInstrumentoUtilizado")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOMEINSTRUMENTOUTILIZADO");

                    b.Property<string>("NomeSocial")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOMESOCIAL");

                    b.Property<string>("OrientacaoSexual")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ORIENTACAOSEXUAL");

                    b.Property<string>("ProfissaoEnvolvildo")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PROFISSAOENVOLVILDO");

                    b.Property<int>("RegistroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RGID");

                    b.Property<string>("RelacaoAutorVitima")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("RELACAOAUTORVITIMA");

                    b.Property<int>("SequencialEnvolvido")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SEQUENCIALENVOLVIDO");

                    b.Property<string>("Sexo")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SEXO");

                    b.Property<string>("TipoEnvolvido")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPOENVOLVIDO");

                    b.Property<string>("Turista")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TURISTA");

                    b.Property<string>("Vulgo")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("VULGO");

                    b.HasKey("Id");

                    b.HasIndex("RegistroId");

                    b.ToTable("ENVOLVIDOS", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.EnvolvidoCriminal", b =>
                {
                    b.Property<int>("EnvolvidoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ENVID");

                    b.Property<string>("BoeAntecedente")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BOEANTECEDENTE");

                    b.Property<string>("CrimeCometido")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CRIMECOMETIDO");

                    b.Property<string>("EnvolvimentoCrime")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ENVOLVIMENTOCRIME");

                    b.Property<string>("ProntuarioSeres")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PRONTUARIOSERES");

                    b.Property<string>("SituacaoCarceraria")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SITUACAOCARCERARIA");

                    b.Property<string>("SituacaoCriminal")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SITUACAOCRIMINAL");

                    b.Property<string>("TipoProcedimento")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPOPROCEDIMENTO");

                    b.HasKey("EnvolvidoId");

                    b.ToTable("CRIMINAL", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.EnvolvidoEndereco", b =>
                {
                    b.Property<int>("EnvolvidoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ENVID");

                    b.Property<string>("BairroEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BAIRROENDERECO");

                    b.Property<string>("ComplementoLogradouroEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COMPLEMENTOLOGRADOUROENDERECO");

                    b.Property<string>("Fonte")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FONTE");

                    b.Property<string>("LatitudeEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LATITUDEENDERECO");

                    b.Property<string>("LocalidadeComunidadeEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIDADECOMUNIDADEENDERECO");

                    b.Property<string>("LogradouroEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOGRADOUROENDERECO");

                    b.Property<string>("LongitudeEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LONGITUDEENDERECO");

                    b.Property<string>("MunicipioEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MUNICIPIOENDERECO");

                    b.Property<string>("NumeroLogradouroEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMEROLOGRADOUROENDERECO");

                    b.Property<string>("PontoReferenciaEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PONTOREFERENCIAENDERECO");

                    b.Property<string>("RegiaoEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("REGIAOENDERECO");

                    b.Property<string>("TipoResidenciaEndereco")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPORESIDENCIAENDERECO");

                    b.HasKey("EnvolvidoId");

                    b.ToTable("ENDERECOS", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.EnvolvidoSaude", b =>
                {
                    b.Property<int>("EnvolvidoId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ENVID");

                    b.Property<DateTime?>("DataObito")
                        .HasColumnType("date")
                        .HasColumnName("DATAOBITO");

                    b.Property<string>("GDL")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("GDL");

                    b.Property<TimeSpan?>("HoraMorte")
                        .HasColumnType("INTERVAL DAY(8) TO SECOND(7)")
                        .HasColumnName("HORAMORTE");

                    b.Property<string>("HospitalSocorro")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HOSPITALSOCORRO");

                    b.Property<string>("IML")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IML");

                    b.Property<string>("Lesao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LESAO");

                    b.Property<string>("LocalMorte")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALMORTE");

                    b.Property<string>("NIC")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NIC");

                    b.Property<string>("NumeroDeclaracaoObito")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMERODECLARACAOOBITO");

                    b.Property<string>("OrgaoSocorro")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ORGAOSOCORRO");

                    b.Property<string>("RegistroIML")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("REGISTROIML");

                    b.Property<string>("SituacaoVitimaAcidente")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SITUACAOVITIMAACIDENTE");

                    b.Property<string>("TransporteAutor")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TRANSPORTEAUTOR");

                    b.Property<string>("TransporteVitima")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TRANSPORTEVITIMA");

                    b.Property<string>("UnidadeHospitalar")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("UNIDADEHOSPITALAR");

                    b.HasKey("EnvolvidoId");

                    b.ToTable("SAUDE", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.Fato", b =>
                {
                    b.Property<int>("RegistroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RGID");

                    b.Property<string>("AisFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AISFATO");

                    b.Property<string>("BairroFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BAIRROFATO");

                    b.Property<string>("CausaJuridicaFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CAUSAJURIDICAFATO");

                    b.Property<string>("ComplementoFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("COMPLEMENTOFATO");

                    b.Property<DateTime>("DataFato")
                        .HasColumnType("date")
                        .HasColumnName("DATAFATO");

                    b.Property<int>("DiaNumeralFato")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DIANUMERALFATO");

                    b.Property<string>("DiaSemanaAbreviadoFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DIASEMANAABREVIADOFATO");

                    b.Property<string>("DiretoriaFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DIRETORIAFATO");

                    b.Property<string>("FonteFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FONTEFATO");

                    b.Property<string>("HistoricoFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("HISTORICOFATO");

                    b.Property<TimeSpan?>("HoraFato")
                        .HasColumnType("INTERVAL DAY(8) TO SECOND(7)")
                        .HasColumnName("HORAFATO");

                    b.Property<string>("LatitudeFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LATITUDEFATO");

                    b.Property<string>("LocalFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALFATO");

                    b.Property<string>("LocalidadeComunidadeFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOCALIDADECOMUNIDADEFATO");

                    b.Property<string>("LogradouroFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LOGRADOUROFATO");

                    b.Property<string>("LongitudeFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("LONGITUDEFATO");

                    b.Property<string>("MunicipioFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MUNICIPIOFATO");

                    b.Property<string>("NaturezaBoe")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NATUREZABOE");

                    b.Property<string>("NumeroLogradouroFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMEROLOGRADOUROFATO");

                    b.Property<string>("PontoReferenciaFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PONTOREFERENCIAFATO");

                    b.Property<string>("RegiaoFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("REGIAOFATO");

                    b.Property<string>("StatusMotivacaoFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("STATUSMOTIVACAOFATO");

                    b.Property<string>("TurnoFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TURNOFATO");

                    b.Property<string>("UnidadePCFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("UNIDADEPCFATO");

                    b.Property<string>("UnidadePMFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("UNIDADEPMFATO");

                    b.Property<string>("ZonaFato")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ZONAFATO");

                    b.HasKey("RegistroId");

                    b.ToTable("FATOS", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.Inquerito", b =>
                {
                    b.Property<int>("RegistroId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("RGID");

                    b.Property<string>("AutoridadeResponsavel")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AUTORIDADERESPONSAVEL");

                    b.Property<string>("CumprimentoMandado")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("CUMPRIMENTOMANDADO");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("date")
                        .HasColumnName("DATACONCLUSAO");

                    b.Property<DateTime?>("DataInstaraucao")
                        .HasColumnType("date")
                        .HasColumnName("DATAINSTAURACAO");

                    b.Property<DateTime?>("DataRepresentacao")
                        .HasColumnType("date")
                        .HasColumnName("DATAREPRESENTACAO");

                    b.Property<string>("Destino")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESTINO");

                    b.Property<string>("ExpedicaoMandado")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("EXPEDICAOMANDADO");

                    b.Property<string>("MatriculaAutoridadeResponsavel")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("MATRICULAAUTORIDADERESPONSAVEL");

                    b.Property<string>("NumOfRemessa")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMOFREMESSA");

                    b.Property<string>("NumOfRepresentacao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMOFREPRESENTACAO");

                    b.Property<int?>("NumeroDeclaracao")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMERODECLARACAO");

                    b.Property<string>("NumeroIP")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NUMEROIP");

                    b.Property<int?>("NumeroOuvida")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMEROOUVIDA");

                    b.Property<int?>("NumeroQual")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NUMEROQUAL");

                    b.Property<string>("SituacaoIP")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SITUACAOIP");

                    b.Property<string>("TipoInstauracao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPOINSTAURACAO");

                    b.Property<string>("TipoRepresentacao")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPOREPRESENTACAO");

                    b.Property<string>("UnidadePC")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("UNIDADEPC");

                    b.HasKey("RegistroId");

                    b.ToTable("INQUERITOS", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.Municipio_Diretoria_AIS_BPM", b =>
                {
                    b.Property<string>("Municipio")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("MUNICIPIO");

                    b.Property<string>("AIS")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("AIS");

                    b.Property<string>("BPM")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("BPM");

                    b.Property<string>("Diretoria")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DIRETORIA");

                    b.HasKey("Municipio");

                    b.ToTable("MUNICIPIOS", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Registro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BOE")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("NVARCHAR2(13)")
                        .HasColumnName("BOE");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATAATUALIZACAO");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATALANCAMENTO");

                    b.Property<DateTime>("DataRegistroBOE")
                        .HasColumnType("date")
                        .HasColumnName("DATAREGISTROBOE");

                    b.Property<bool>("Excluido")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("EXCLUIDO");

                    b.Property<string>("Intencionalidade")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("INTENCIONALIDADE");

                    b.Property<string>("ObservacaoRegistro")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("OBSERVACAOREGISTRO");

                    b.Property<bool>("StatusRegistro")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("STATUSREGISTRO");

                    b.Property<string>("TipoDeRegistro")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("TIPODEREGISTRO");

                    b.Property<string>("UsuarioRegistro")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("USUARIOREGISTRO");

                    b.HasKey("Id");

                    b.ToTable("REGISTROS", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("NVARCHAR2(450)")
                        .HasColumnName("LOGIN");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("FUNCAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("SENHA");

                    b.HasKey("Login");

                    b.ToTable("USUARIO", "SDS_SIMIP_USU");
                });

            modelBuilder.Entity("Domain.Entities.Arquivo", b =>
                {
                    b.HasOne("Domain.Entities.Registro", null)
                        .WithMany("Arquivos")
                        .HasForeignKey("RegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.BoeComplementado", b =>
                {
                    b.HasOne("Domain.Entities.Registro", null)
                        .WithMany("BoeComplementados")
                        .HasForeignKey("RegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Envolvido", b =>
                {
                    b.HasOne("Domain.Entities.Registro", null)
                        .WithMany("Envolvidos")
                        .HasForeignKey("RegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.EnvolvidoCriminal", b =>
                {
                    b.HasOne("Domain.Entities.Envolvido", null)
                        .WithOne("Criminal")
                        .HasForeignKey("Domain.Entities.EnvolvidoCriminal", "EnvolvidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.EnvolvidoEndereco", b =>
                {
                    b.HasOne("Domain.Entities.Envolvido", null)
                        .WithOne("Endereco")
                        .HasForeignKey("Domain.Entities.EnvolvidoEndereco", "EnvolvidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.EnvolvidoSaude", b =>
                {
                    b.HasOne("Domain.Entities.Envolvido", null)
                        .WithOne("Saude")
                        .HasForeignKey("Domain.Entities.EnvolvidoSaude", "EnvolvidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Fato", b =>
                {
                    b.HasOne("Domain.Entities.Registro", null)
                        .WithOne("Fato")
                        .HasForeignKey("Domain.Entities.Fato", "RegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Inquerito", b =>
                {
                    b.HasOne("Domain.Entities.Registro", null)
                        .WithOne("Inquerito")
                        .HasForeignKey("Domain.Entities.Inquerito", "RegistroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Envolvido", b =>
                {
                    b.Navigation("Criminal");

                    b.Navigation("Endereco");

                    b.Navigation("Saude");
                });

            modelBuilder.Entity("Domain.Entities.Registro", b =>
                {
                    b.Navigation("Arquivos");

                    b.Navigation("BoeComplementados");

                    b.Navigation("Envolvidos");

                    b.Navigation("Fato");

                    b.Navigation("Inquerito");
                });
#pragma warning restore 612, 618
        }
    }
}
